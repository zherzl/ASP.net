//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetREST_data.FootballService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FootballService.IFootballService")]
    public interface IFootballService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/GetData", ReplyAction="http://tempuri.org/IFootballService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/GetData", ReplyAction="http://tempuri.org/IFootballService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/GetAllTeamsData", ReplyAction="http://tempuri.org/IFootballService/GetAllTeamsDataResponse")]
        System.Collections.Generic.List<ModelLibrary.Entities.Team> GetAllTeamsData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/GetAllTeamsData", ReplyAction="http://tempuri.org/IFootballService/GetAllTeamsDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ModelLibrary.Entities.Team>> GetAllTeamsDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/AddTeam", ReplyAction="http://tempuri.org/IFootballService/AddTeamResponse")]
        void AddTeam(ModelLibrary.Entities.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/AddTeam", ReplyAction="http://tempuri.org/IFootballService/AddTeamResponse")]
        System.Threading.Tasks.Task AddTeamAsync(ModelLibrary.Entities.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/AddTeamRange", ReplyAction="http://tempuri.org/IFootballService/AddTeamRangeResponse")]
        void AddTeamRange(System.Collections.Generic.List<ModelLibrary.Entities.Team> teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFootballService/AddTeamRange", ReplyAction="http://tempuri.org/IFootballService/AddTeamRangeResponse")]
        System.Threading.Tasks.Task AddTeamRangeAsync(System.Collections.Generic.List<ModelLibrary.Entities.Team> teams);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFootballServiceChannel : GetREST_data.FootballService.IFootballService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FootballServiceClient : System.ServiceModel.ClientBase<GetREST_data.FootballService.IFootballService>, GetREST_data.FootballService.IFootballService {
        
        public FootballServiceClient() {
        }
        
        public FootballServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FootballServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FootballServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FootballServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public System.Collections.Generic.List<ModelLibrary.Entities.Team> GetAllTeamsData() {
            return base.Channel.GetAllTeamsData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ModelLibrary.Entities.Team>> GetAllTeamsDataAsync() {
            return base.Channel.GetAllTeamsDataAsync();
        }
        
        public void AddTeam(ModelLibrary.Entities.Team team) {
            base.Channel.AddTeam(team);
        }
        
        public System.Threading.Tasks.Task AddTeamAsync(ModelLibrary.Entities.Team team) {
            return base.Channel.AddTeamAsync(team);
        }
        
        public void AddTeamRange(System.Collections.Generic.List<ModelLibrary.Entities.Team> teams) {
            base.Channel.AddTeamRange(teams);
        }
        
        public System.Threading.Tasks.Task AddTeamRangeAsync(System.Collections.Generic.List<ModelLibrary.Entities.Team> teams) {
            return base.Channel.AddTeamRangeAsync(teams);
        }
    }
}
