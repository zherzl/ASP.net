@model List<ModelLibrary.Entities.Team>
@{
    ViewBag.Title = "Home Page";
}

<style type="text/css">
    .imgSize {
        width: 70px;
        
    }
</style>
<div class="jumbotron">
    <table class="table table-striped"> 
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.ShortName</td>
                <td>@item.SquadMarketValue</td>
                <td> <img class="imgSize" src="@item.CrestUrl" alt="No image" /> </td>
            </tr>
        }
    </table>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>

<script type="text/javascript">
    $.ajax({
        headers: { 'X-Auth-Token': '1da45b53956c477dbca8af43bd407172' },
        url: 'http://api.football-data.org/v1/competitions/398/teams', // 'http://api.football-data.org/v1/fixtures?timeFrame=n1',
        dataType: 'json',
        type: 'GET',
    }).done(function (response) {
        // do something with the response, e.g. isolate the id of a linked resource        
        var regex = /.*?(\d+)$/; // the ? makes the first part non-greedy
        //var res = regex.exec(response.fixtures[0]._links.awayTeam.href);
        //var teamId = res[1];
        //console.log(teamId);
        
        for (var i = 0; i < response.teams.length; i++) {

            console.log(response.teams[i]);
        }
    });
</script>