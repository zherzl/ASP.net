@model Knockout_Learn1.Models.Grad

@{
    ViewBag.Title = "InteractiveBindingsAddCity";
}

<h2>InteractiveBindingsAddCity</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Grad</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Naziv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naziv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DrzavaID, "DrzavaID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DrzavaID", (IEnumerable<SelectListItem>)ViewData["DrzavaID"], htmlAttributes: new { @id = "mojaLista", @class = "form-control", onchange = "Prikazi(this.value, id, [ 't1', 't2' ] )" })
                @Html.ValidationMessageFor(model => model.DrzavaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    function Prikazi(lista, id, popisListaZaRefresh) {
        for (var i = 0; i < popisListaZaRefresh.length; i++) {
            console.log(lista + ' ' + id + ' ' + popisListaZaRefresh[i]);
        }
    }
</script>